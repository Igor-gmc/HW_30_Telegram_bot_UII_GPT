# --- NEW FILE: services/chatgpt.py ---

import os
import logging
from openai import AsyncOpenAI

logger = logging.getLogger(__name__)

# –ö–ª–∏–µ–Ω—Ç ChatGPT
client = AsyncOpenAI(api_key=os.getenv("OPENAI_API_KEY"))

async def get_marketing_advice(problem: str) -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–≤–µ—Ç –ø–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    try:
        response = await client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": "–¢—ã –æ–ø—ã—Ç–Ω—ã–π –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥, –ø–æ–º–æ–≥–∏ –∫—Ä–∞—Ç–∫–æ –∏ —á—ë—Ç–∫–æ."},
                {"role": "user", "content": problem}
            ],
            temperature=0.7,
        )
        answer = response.choices[0].message.content.strip()
        logger.info("–°–æ–≤–µ—Ç –ø–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω.")
        return answer
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ ChatGPT –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–≤–µ—Ç–∞: {e}")
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ."

async def get_motivation_phrase() -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—É—é —Ñ—Ä–∞–∑—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    try:
        response = await client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": "–¢—ã –∫–æ—É—á –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º. –î–∞–π –∫–æ—Ä–æ—Ç–∫—É—é –º–æ—Ç–∏–≤–∏—Ä—É—é—â—É—é —Ñ—Ä–∞–∑—É."},
                {"role": "user", "content": "–ú–æ—Ç–∏–≤–∏—Ä—É–π –º–µ–Ω—è –Ω–∞ —É—Å–ø–µ—Ö –≤ –ø—Ä–æ–¥–∞–∂–∞—Ö."}
            ],
            temperature=0.9,
        )
        phrase = response.choices[0].message.content.strip()
        logger.info("–ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–∞—è —Ñ—Ä–∞–∑–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞.")
        return phrase
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ ChatGPT –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–æ—Ç–∏–≤–∞—Ü–∏–∏: {e}")
        return "–°–µ–≥–æ–¥–Ω—è –æ—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è —É—Å–ø–µ—Ö–∞! üí™"
