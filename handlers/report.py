# --- NEW FILE: handlers/report.py ---

import logging
from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
from sqlalchemy import select, func
from database.db import async_session
from database.models import User, Task
from handlers.deals import Deal  # –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ –º–æ–¥–µ–ª—å
from datetime import datetime

router = Router()
logger = logging.getLogger(__name__)

@router.message(Command("report"))
async def send_report(message: Message):
    """
    –û—Ç—á—ë—Ç –∑–∞ —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é:
    - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –∑–∞–¥–∞—á;
    - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫—Ä—ã—Ç—ã—Ö —Å–¥–µ–ª–æ–∫ –∏ –∏—Ö –æ–±—â–∞—è —Å—É–º–º–∞.
    """
    tg_user = message.from_user

    async with async_session() as session:
        # 1Ô∏è‚É£ –ó–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
        result_tasks = await session.execute(
            select(func.count(Task.id)).join(User).where(
                User.tg_id == tg_user.id, Task.status == "–í—ã–ø–æ–ª–Ω–µ–Ω–∞"
            )
        )
        completed_tasks = result_tasks.scalar() or 0

        # 2Ô∏è‚É£ –ó–∞–∫—Ä—ã—Ç—ã–µ —Å–¥–µ–ª–∫–∏
        result_deals = await session.execute(
            select(
                func.count(Deal.id),
                func.coalesce(func.sum(Deal.amount), 0)
            ).join(User).where(User.tg_id == tg_user.id, Deal.status == "–ó–∞–∫—Ä—ã—Ç–∞")
        )
        deals_count, deals_sum = result_deals.one()

    report_text = (
        f"üìä <b>–û—Ç—á—ë—Ç –Ω–∞ {datetime.now():%d.%m.%Y %H:%M}</b>\n\n"
        f"‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞–¥–∞—á: {completed_tasks}\n"
        f"üíº –ó–∞–∫—Ä—ã—Ç–æ —Å–¥–µ–ª–æ–∫: {deals_count}\n"
        f"üí∞ –û–±—â–∞—è —Å—É–º–º–∞: {deals_sum} ‚ÇΩ"
    )

    await message.answer(report_text, parse_mode="HTML")
    logger.info("–û—Ç—á—ë—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é %s", tg_user.id)
