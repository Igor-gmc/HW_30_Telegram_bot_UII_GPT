import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.memory import MemoryStorage

# --- –ò–º–ø–æ—Ä—Ç—ã –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞ ---
from config import BOT_TOKEN, setup_logging, validate_bot_token_or_raise
from database.models import Base
from database.db import engine

# --- –ò–º–ø–æ—Ä—Ç —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ ---
from handlers.start import router as start_router
from handlers.tasks import router as tasks_router
from handlers.deals import router as deals_router

# --- NEW CODE START: –¥–æ–±–∞–≤–ª–µ–Ω—ã ChatGPT –∏ –æ—Ç—á—ë—Ç ---
from handlers.marketing import router as marketing_router
from handlers.motivation import router as motivation_router
from handlers.report import router as report_router
# --- NEW CODE END ---

logger = logging.getLogger(__name__)

async def on_startup():
    """
    –°–æ–∑–¥–∞—ë—Ç —Ç–∞–±–ª–∏—Ü—ã –≤ –ë–î –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ.
    –ï—Å–ª–∏ —Ç–∞–±–ª–∏—Ü—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç.
    """
    async with engine.begin() as conn:
        await conn.run_sync(Base.metadata.create_all)
    logger.info("‚úÖ –¢–∞–±–ª–∏—Ü—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã (–µ—Å–ª–∏ –∏—Ö –Ω–µ –±—ã–ª–æ).")

async def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.

    1. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
    2. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å BOT_TOKEN.
    3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä (Dispatcher).
    4. –ü–æ–¥–∫–ª—é—á–∞–µ—Ç –≤—Å–µ —Ä–æ—É—Ç–µ—Ä—ã (start, tasks, deals, marketing, motivation, report).
    5. –°–æ–∑–¥–∞—ë—Ç —Ç–∞–±–ª–∏—Ü—ã –≤ –ë–î –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ.
    6. –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π —Ü–∏–∫–ª polling.
    """
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    setup_logging()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
    validate_bot_token_or_raise(BOT_TOKEN)

    # –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
    bot = Bot(token=BOT_TOKEN)

    # –•—Ä–∞–Ω–∏–ª–∏—â–µ FSM (–≤ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏)
    storage = MemoryStorage()
    dp = Dispatcher(storage=storage)

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
    dp.include_router(start_router)
    dp.include_router(tasks_router)
    dp.include_router(deals_router)

    # --- NEW CODE START: –¥–æ–±–∞–≤–ª–µ–Ω—ã –º–æ–¥—É–ª–∏ ChatGPT –∏ –æ—Ç—á—ë—Ç ---
    dp.include_router(marketing_router)
    dp.include_router(motivation_router)
    dp.include_router(report_router)
    # --- NEW CODE END ---

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    await on_startup()

    logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    print(f"Start polling\nRun polling for bot @{(await bot.me()).username}")

    # –ó–∞–ø—É—Å–∫ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ polling (–ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π)
    await dp.start_polling(bot)

# --- –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ---
if __name__ == "__main__":
    """
    –ü—Ä–∏ –ø—Ä—è–º–æ–º –∑–∞–ø—É—Å–∫–µ —Ñ–∞–π–ª–∞ bot.py:
    - –∑–∞–ø—É—Å–∫–∞–µ–º event loop —á–µ—Ä–µ–∑ asyncio.run()
    - –≤—ã–ø–æ–ª–Ω—è–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é main()
    """
    asyncio.run(main())
